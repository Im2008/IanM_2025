# course illustrations
Title: "Development Foundations"
Description: "The essentials of development begin by understanding the need for tools and equipment. Illustrated are the core components you’ll need for a smooth entry into coding, collaboration, and project creation."
Topics:
  - title: "Big O HW Blog"
    image: "/images/logo.png"
    link: "/csp/big_o"
    alt: "Big O BLOG"
    keyPoints:
      - "Big O Notation describes how an algorithm’s runtime or memory usage grows with input size, helping compare performance regardless of system differences."
      - "Efficiency Matters because faster algorithms improve user experience, save resources (CPU, memory), and scale better with large data."
      - "Common Complexities include O(1), O(log n), O(n), O(n log n), and O(n²), each representing different performance patterns for tasks like searching and sorting."
      - "Trade-Offs Exist between speed, memory, and energy use—choosing the right algorithm often depends on the context and constraints of the problem."
    subtitle: "Big O Notation"
    description: "Big O Notation is a mathematical concept used in computer science to describe the performance characteristics of algorithms. It provides a high-level understanding of how an algorithm's runtime or memory usage grows with the size of the input data."
  - title: "Random Algorithms"
    image: "/images/logo.png"
    link: "/csp/random_value"
    alt: "Random Value"
    keyPoints:
      - "Random numbers are essential in simulations, games, testing, and security, enabling unpredictability and modeling of real-world behaviors."
      - "Python’s random.randint(a, b) function generates integers between a and b (inclusive), used for things like dice rolls, coin flips, and color spinners with custom probabilities."
      - "Simulations don't always require randomness, but randomness can add realism—e.g., modeling traffic lights deterministically vs. simulating a coin flip or a Magic 8-Ball with weighted outcomes."
      - "Hands-on coding tasks like modifying traffic light durations, simulating bouncing balls, and creating a dice game help reinforce understanding of randomness and simulation in action."
    subtitle: "Random Values"
    description: "Random algorithms are a class of algorithms that use random numbers to make decisions or perform computations. They can be used in various applications, including cryptography, simulations, and optimization problems."
  - title: "List Filtering"
    image: "/images/logo.png"
    link: "/csp/list_filtering"
    alt: "List Filtering"
    keyPoints:
      - "Lists in Python are ordered collections used to store multiple items in a single variable, making it easier to manage related data like shopping carts, playlists, and email inboxes."
      - "Common list operations include creating lists, accessing/modifying elements by index, adding (with append or insert), removing (pop, remove), and slicing."
      - "List traversal means looping through each item in a list—this is essential for applying logic to items, like checking conditions or performing calculations."
      - "Filtering algorithms use traversal with conditions (like if statements) to create new lists that only include items that meet specific criteria—useful for tasks like searching, sorting, or extracting data in apps or databases."
    subtitle: "List Filtering"
    description: "List filtering is a programming technique used to create a new list that contains only the elements that meet certain criteria from an existing list. This is often done using loops and conditional statements."
  - title: "Binary Search"
    image: "/images/logo.png"
    link: "/csp/binary_search"
    alt: "Binary Search"
    keyPoints:
      - "Binary Search is a fast algorithm used to find a target in a sorted list by repeatedly dividing the list in half, achieving O(log n) time complexity."
      - "Unlike linear search, which checks every element, binary search checks the middle, then decides whether to continue left or right, significantly reducing comparisons."
      - "Limitations include needing the list to be sorted and being more complex to implement than linear search."
      - "Real-world uses include search features in databases, phonebooks, games, and search engines—anywhere large sorted data needs fast lookup."
    subtitle: "Binary Search"
    description: "Binary search is an efficient algorithm for finding a target value within a sorted array or list. It works by repeatedly dividing the search interval in half until the target value is found or the interval is empty."
  - title: "Safe Computing"
    image: "/images/logo.png"
    link: "/csp/safe_computing"
    alt: "Safe Computing"
    keyPoints:
      - "PII (Personally Identifiable Information) includes sensitive data like your name, email, or Social Security number. Cookies and websites can collect this info, raising privacy and security concerns."
      - "Password security and encryption are critical for protecting data. Strong passwords, encrypted communication (like HTTPS), and hashing help prevent unauthorized access."
      - "Phishing (via email, fake sites, or texts) tricks users into sharing personal info. Staying safe means checking URLs, avoiding suspicious links, and enabling spam filters."
      - "Verification tools like MFA, digital signatures, and CAPTCHAs help confirm identity and block bots or malicious users from accessing private systems."
    subtitle: "Safe Computing"
    description: "Safe computing refers to practices and technologies that help protect personal information and ensure secure online interactions. This includes understanding how data is collected, stored, and shared, as well as implementing security measures to safeguard sensitive information."
  - title: "Legal and Ethical Concern"
    image: "/images/logo.png"
    link: "/csp/hw_links"
    alt: "Legal and Ethical Concern"
    keyPoints:
      - "Intellectual Property (IP) laws protect creators' rights over digital content through copyright, patents, and trademarks. Sharing or using code without proper licensing can lead to legal penalties."
      - "Software Licensing defines how others can use your code. Common open-source licenses (MIT, GPL, Apache 2.0) each have different permissions and restrictions based on your goals (e.g., openness vs. protection)."
      - "Ethical issues include plagiarism, misuse of open-source code, lack of attribution, and commercial exploitation, which damage trust in the developer community even if not always illegal."
      - "Choosing the right license (like GPL to prevent corporate misuse or MIT for easy collaboration) helps balance innovation, protection, and ethical use in projects and open-source development."
    subtitle: "Legal and Ethnical Concern"
    description: "Legal and ethical concerns in computing involve understanding the implications of technology on society, including issues like intellectual property rights, software licensing, and the ethical use of code. Developers must navigate these challenges to ensure responsible and fair practices in their work."
  - title: "Computing Bias"
    image: "/images/logo.png"
    link: "/csp/hw_links"
    alt: "Computing Bias"
    keyPoints:
      - "Definition & Causes: Computing bias happens when algorithms produce unfair outcomes due to biased data, flawed design, or programming errors—often unintentionally reinforcing stereotypes or excluding certain groups."
      - "Types of Bias: There are three main types—algorithmic bias (faulty logic in systems), data bias (biased or incomplete datasets), and cognitive bias (bias from human assumptions during data collection)."
      - "Explicit vs. Implicit Data: Explicit data is user-provided (e.g., preferences, age), while implicit data is inferred from behavior (e.g., watch history)—with implicit data often reinforcing narrow content recommendations."
      - "Mitigation Strategies: Bias can be reduced through pre-processing (cleaning and diversifying data), in-processing (training with balanced data), and post-processing (monitoring deployed models for fairness)."
    subtitle: "Computing Bias"
    description: "Computing bias refers to unfair or prejudiced outcomes produced by computer systems, algorithms, or artificial intelligence. It happens when these systems favor certain groups or disadvantage others, often unintentionally. This bias can come from several sources, including unbalanced or incomplete training data, flawed system design, or the unconscious assumptions of developers. As a result, computing bias can reinforce existing societal inequalities and limit opportunities for underrepresented groups. Recognizing and addressing computing bias is essential to ensure fairness, accuracy, and inclusivity in technology."
  - title: "Digital Divide"
    image: "/images/logo.png"
    link: "/csp/hw_links"
    alt: "Digital Divide"
    keyPoints:
      - "Causes of the Digital Divide: The divide stems from economic inequality, geographic barriers (like rural or border areas), and systemic societal issues such as language and political representation. These lead to uneven access to internet and technology."
      - "Impact on Society: Limited digital access negatively affects education, employment, healthcare, and civic engagement, putting underserved communities at a significant disadvantage."
      - "Ethical Concerns and Social Justice: The digital divide raises issues of fairness and equity, as marginalized groups often lack the resources needed to fully participate in digital life, reinforcing existing social inequalities."
      - "Solutions to Bridge the Gap: Strategies include improving infrastructure, subsidizing technology, creating inclusive tools, and implementing public policies that promote digital equity. Students and communities also play a key role through education, device donation, and advocacy."
    subtitle: "Digital Divide"
    description: "The digital divide refers to the gap between those who have easy access to digital technology and the internet and those who do not. This divide can be due to various factors, including socioeconomic status, geographic location, and education level. The digital divide can lead to significant disparities in opportunities for education, employment, and access to information and services."
  - title: "Beneficial and Harmful Effects"
    image: "/images/logo.png"
    link: "/csp/hw_links"
    alt: "Beneficial and Harmful Effects"
    keyPoints:
      - "Beneficial Effects: Technology advances fields like healthcare (e.g., MRI scans, DNA sequencing), education (e.g., online access to resources), and business (e.g., automation like telephone trees), improving efficiency and providing new opportunities."
      - "Harmful Effects: Technology can contribute to issues like cyberbullying, unsafe internet use, and mental health impacts, particularly among children and teenagers. Social media, for instance, has been linked to depression and anxiety."
      - "Neutral Effects: Some technologies, like AI and drones, have both positive and negative consequences. While AI can improve efficiency, it also raises concerns about privacy, job displacement, and environmental impact. Drones offer benefits in rescue operations but can also violate privacy."
      - "Debatable Technologies: Innovations like gene editing present both potential cures for genetic diseases and ethical dilemmas, particularly regarding unregulated uses and long-term effects on future generations."
    subtitle: "Beneficial and Harmful Effects"
    description: "The beneficial and harmful effects of technology refer to the positive and negative impacts that technology can have on society, individuals, and the environment. While technology can lead to significant advancements and improvements in various fields, it can also create challenges and ethical dilemmas that need to be addressed."